plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.23.3'
}

group = 'com.lucky'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring boot
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// test lombok
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// postgresql
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.hibernate:hibernate-spatial:6.5.2.Final'
	implementation 'org.locationtech.jts:jts-core:1.18.0'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//JWT 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Jackson
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'

	// JDBC
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.named("compileJava") {
	dependsOn 'spotlessJava'
}

ext.googleJavaFormatVersion = "1.18.1"

spotless {
	java {
		googleJavaFormat("$googleJavaFormatVersion")
		// 아래 순서로 import문 정렬
		importOrder('java', 'javax', 'jakarta', 'org', 'com')
		// 사용하지 않는 import 제거
		removeUnusedImports()
		// 각 라인 끝에 있는 공백을 제거
		trimTrailingWhitespace()
		// 파일 끝에 새로운 라인 추가
		endWithNewline()
	}
}

// Git hooks 업데이트 작업
tasks.register('updateGitHooks', Copy) {
	from 'script/pre-commit'
	into '.git/hooks'
}

// makeGitHooksExecutable 작업을 OS에 따라 실행 여부 결정
tasks.register('makeGitHooksExecutable', Exec) {
	// Windows가 아닌 경우에만 실행
	onlyIf { !System.properties['os.name'].toLowerCase().contains('windows') }

	commandLine 'chmod', '+x', '.git/hooks/pre-commit'
	dependsOn 'updateGitHooks'
}

// compileJava 작업이 실행되기 전에 makeGitHooksExecutable 작업을 실행
tasks.named('compileJava') {
	dependsOn 'makeGitHooksExecutable'
}
